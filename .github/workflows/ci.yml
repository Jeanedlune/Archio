name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24']
        exclude:
          - go-version: '1.21'
          - go-version: '1.22'
          - go-version: '1.23'

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run go mod tidy
      run: go mod tidy

    - name: Check go mod tidy
      run: |
        if ! git diff --exit-code go.mod go.sum; then
          echo "go.mod or go.sum is not tidy. Run 'go mod tidy' locally."
          exit 1
        fi

    - name: Run go fmt
      run: go fmt ./...

    - name: Check go fmt
      run: |
        if ! git diff --exit-code; then
          echo "Code is not formatted. Run 'go fmt ./...' locally."
          exit 1
        fi

    - name: Run go vet
      run: go vet ./...

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      if: matrix.go-version == '1.24'
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.out

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build
      run: go build -v ./cmd/server

    - name: Test build
      run: ./server --help || true

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.24'

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        args: --timeout=5m